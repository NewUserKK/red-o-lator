 // STATUS REGISTERS - read only register
    /**
     * Scalar condition code. Used as a carry-out bit. For a comparison
     * instruction, this bit indicates failure or success. For logical
     * operations, this is 1 if the result was non-zero.
     */
    SCC,

    /**
     * Wavefront priority set by the shader processor interpolator (SPI) when
     * the wavefront is created. See the S_SETPRIO instruction (page 12-49) for
     * details. 0 is lowest, 3 is highest priority.
     */
    SPI_PRIO,
    /**
     * Wavefront priority set by the shader program. See the S_SETPRIO
     * instruction for details.
     */
    WAVE_PRIO,

    /**
     *  Privileged mode. Can only be active when in the trap handler. Gives
     *  write access to the TTMP, TMA, and TBA registers.
     */
    PRIV,

    /**
     * Indicates that a trap handler is present. When set to zero, traps are not
     * taken.
     */
    TRAP_EN,

    /**
     *  Indicates whether thread trace is enabled for this wavefront. If zero,
     *  also ignore any shader-generated (instruction) thread-trace data.
     */
    TTRACE_EN,
    /**
     *  This status bit indicates if export buffer space has been allocated. The
     *  shader stalls any export instruction until this bit becomes 1. It is set
     *  to 1 when export buffer space has been allocated. Before a Pixel or
     * Vertex shader can export, the hardware checks the state of this bit. If
     * the bit is 1, export can be issued. If the bit is zero, the wavefront
     * sleeps until space becomes available in the export buffer. Then, this bit
     * is set to 1, and the wavefront resumes.
     */
    EXPORT_RDY,
    /**
     * Exec mask is zero.
     */
    EXECZ,
    /**
     * Vector condition code is zero.
     */
    VCCZ,
    /**
     *  Wavefront is a member of a work-group of more than one wavefront.
     */
    IN_TG,
    /**
     *  Wavefront is waiting at a barrier.
     */
    IN_BARRIER,
    /**
     *  Wavefront is halted or scheduled to halt. HALT can be set by the host
     *  through wavefront-control messages, or by the shader. This bit is
     *  ignored while in the trap handler (PRIV = 1); it also is ignored if a
     *  host-initiated trap is received (request to enter the trap handler).
     */
    HALT,
    /**
     *  Wavefront is flagged to enter the trap handler as soon as possible.
     */
    TRAP,
    /**
     *  Enables/disables thread trace for this compute unit (CU). This bit
     *  allows more than one CU to be outputting USERDATA (shader initiated
     * writes to the thread-trace buffer). Note that wavefront data is only
     * traced from one CU per shader array. Wavefront user data (instruction
     * based) can be output if this bit is zero.
     */
    TTRACE_CU_EN,
    /**
     *  Wavefront is active (has been created and not yet ended).
     */
    VALID,
    /**
     *  An ECC error has occurred.
     */
    ECC_ERR,

    /**
     *  For Vertex Shaders only. 1 = this shader is not allocated export buffer
     *  space; all export instructions are ignored (treated as NOPs). Formerly
     *  called VS_NO_ALLOC. Used for stream-out of multiple streams (multiple
     *  passes over the same VS), and for DS running in the VS stage for
     *  wavefronts that produced no primitives.
     */
    SKIP_EXPORT,
    /**
     *  Performance counters are enabled for this wavefront.
     */
    PERF_EN,

    /**
     *  Conditional debug indicator for user mode
     */
    COND_DBG_USER,
    /**
     * Conditional debug indicator for system mode.
     */
    COND_DBG_SYS,
    /**
     * Indicates that ATC replay is enabled.
     */
    ALLOW_REPLAY,
    /**
     *  This wavefront is required to perform an export with Done=1 before
     * terminating.
     */
    MUST_EXPORT,
    // END STATUS REGISTER

    // MODE REGISTER FIELD
    /**
     * [1:0] Single precision round mode. [3:2] Double/Half precision round
     * mode. Round Modes: 0=nearest even, 1= +infinity, 2= -infinity, 3= toward
     * zero.
     */
    FP_ROUND,
    /**
     *  [1:0] Single precision denormal mode. [3:2] Double/Half-precision
     * denormal mode. Denorm modes: 0 = flush input and output denorms. 1 =
     * allow input denorms, flush output denorms. 2 = flush input denorms, allow
     * output denorms. 3 = allow input and output denorms.
     */
    FP_DENORM,
    /**
     *  Used by the vector ALU to force DX10-style treatment of NaNs: when set,
     *  clamp NaN to zero; otherwise, pass NaN through.
     */
    DX10_CLAMP,
    /**
     *  Floating point opcodes that support exception flag gathering quiet and
     *  propagate signaling NaN inputs per IEEE 754-2008. Min_dx10 and max_dx10
     *  become IEEE 754-2008 compliant due to signaling NaN propagation and
     *  quieting.
     */
    IEEE,
    /**
     *  Sticky bit indicating that one or more texture accesses had their LOD
     *  clamped.
     */
    LOD_CLAMPED,
    /**
     *  Forces the wavefront to jump to the exception handler after each
     * instruction is executed (but not after ENDPGM). Only works if TRAP_EN
     * = 1.
     */
    DEBUG,
    /**
     * Enable mask for exceptions. Enabled means if the exception occurs and
     * TRAP_EN==1, a trap is taken. [12] : invalid. [13] : inputDenormal. [14] :
     * float_div0. [15] : overflow. [16] : underflow. [17] : inexact. [18] :
     * int_div0. [19] : address watch [20] : memory violation
     */
    EXCP_EN,
    /**
     * If set, an overflowed FP16 result is clamped to +/- MAX_FP16, regardless
     * of round mode, while still preserving true INF values.
     */
    FP16_OVFL,
    /**
     * 1 = this wave is associated with packer 0. User shader must set this to
     * !PackerID from the POPS initialized SGPR (load_collision_waveID), or zero
     * if not using POPS
     */
    POPS_PACKER0,
    /**
     *  1 = this wave is associated with packer 1. User shader must set this to
     *  PackerID from the POPS initialized SGPR (load_collision_waveID), or zero
     * if not using POPS.
     */
    POPS_PACKER1,
    /**
     *  1 = disable performance counting for this wave
     */
    DISABLE_PERF,
    /**
     *  GPR index enable.
     */
    GPR_IDX_EN,
    /**
     *  0 = normal operation. 1 = skip (do not execute) any vector instructions:
     * valu, vmem, export, lds, gds. "Skipping" instructions occurs at
     * high-speed (10 wavefronts per clock cycle can skip one instruction). This
     * is much faster than issuing and discarding instructions.
     */
    VSKIP,
    /**
     *  Conditional branch stack pointer.
     */
    CSP,
    // END MODE REGISTER FIELDS
